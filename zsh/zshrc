if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

export PATH=~/.config/composer/vendor/bin:$PATH
export PATH=~/.composer/vendor/bin:$PATH
export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="robbyrussell"
zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to disable auto-setting terminal title.
DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    local
)

source $ZSH/oh-my-zsh.sh

# User configuration

source ~/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

alias zshconfig="vim ~/.zshrc"
alias zsource="source ~/.zshrc"
alias ohmyzsh="vim ~/.oh-my-zsh"
alias tmuxconfig="vim ~/.tmux.conf"
alias gdiff="git diff master..$(git_current_branch) | grep \"^diff.*php$\""
alias selector="((which rofi>/dev/null && (rofi -show -dmenu -i || true))||(which fzf >/dev/null && fzf))"
alias git-recent-branches="git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep \"checkout:\" | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[\$1]++' | head -n 15 | sed -n -e \"s/~ HEAD@{/   # /p\" | sed -n -e \"s/}//p\""
alias git-checkout-recent="git co \`git-recent-branches|selector|sed -n -e \"s/#.*$//p\"\`"
alias nah="git reset --hard && git clean -df"
alias web2local="~/./ngrok http 8000"
alias a="php artisan"
alias byebatch="php artisan queue:prune-batches --unfinished=1"
alias publish="curl -F file=@- https://publish.ip1.cc"
alias dotfiles="cd ~/dotfiles"
alias pubkey="cat ~/.ssh/id_rsa.pub"
alias ci="composer install"

# test <filename>
function test {
	phpunit-watcher watch --filter=$1 --testdox
}

function artisan: {
	php artisan | grep $1
}

function addalias {
        echo "alias $1" >> ~/.zshrc
}

function newbranch {
	git checkout master
	git checkout -b SKU-$1
}

tlog() {
    log_directory="storage/logs"
    log_name="${1:-laravel}"
    log_filename="${log_name}-$(date +'%Y-%m-%d').log"
    log_file="${log_directory}/${log_filename}"
    
    num_lines="${2:-50}"  # Default to tailing 10 lines if no value is provided
    
    tail -n "${num_lines}" -f "${log_file}"
}

function www() {
    # List directories in /var/www
    directories=$(find /var/www -maxdepth 1 -type d)

    # Use fzf for interactive selection
    selected_directory=$(echo "$directories" | fzf --prompt="Select a directory: ")

    # Change to the selected directory
    if [ -n "$selected_directory" ]; then
        if [ -d "$selected_directory/current" ]; then
            cd "$selected_directory/current" || return
            echo "You are now in: $selected_directory/current"
        else
            cd "$selected_directory" || return
            echo "You are now in: $selected_directory"
        fi
    else
        echo "No directory selected"
    fi
}

function add_ssh_user() {
    if [[ -z "$1" || -z "$2" ]]; then
        echo "Usage: add_ssh_user <username> <ssh-public-key>"
        return 1
    fi

    local username="$1"
    shift  # Shift to access all remaining arguments as the SSH key
    local ssh_key="$@"

    # Create the new user with a home directory, zsh shell, and "users" as the main group
    sudo useradd -m -s /usr/bin/zsh -g users "$username"

    # Set the account to be passwordless
    sudo passwd -d "$username"

    # Create the .ssh directory and set permissions
    sudo mkdir -p /home/"$username"/.ssh
    sudo chmod 700 /home/"$username"/.ssh

    # Add the provided SSH key to authorized_keys
    echo "$ssh_key" | sudo tee /home/"$username"/.ssh/authorized_keys > /dev/null
    sudo chmod 600 /home/"$username"/.ssh/authorized_keys

    # Adjust ownership of the home and .ssh directories
    sudo chown -R "$username":users /home/"$username"/.ssh

    echo "Restarting ssh service"
    sudo systemctl restart ssh

    echo "User $username has been created and configured for passwordless SSH access with 'users' as the main group."
}
